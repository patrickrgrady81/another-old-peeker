{"version":3,"sources":["actions/credits.js","actions/deck.js","actions/hand.js","actions/holds.js","Components/Hand.js","Components/Card.js","Components/Deck.js","Components/Table/Controls.jsx","actions/bet.js","actions/gameState.js","Components/Table/Cards.jsx","Components/Table/HoldButtons.jsx","Components/Table/index.jsx","Components/Credits/index.jsx","Components/Outcome.jsx","Components/pay.js","Components/Paytable.jsx","Components/Peeker.jsx","reducers/betReducer.js","reducers/creditsReducer.js","reducers/deckReducer.js","reducers/handReducer.js","reducers/holdsReducer.js","reducers/gameStateReducer.js","reducers/index.js","index.js"],"names":["removeCredits","bet","type","payload","saveDeck","deck","saveHand","hand","changeHolds","id","Hand","cards","this","sortedCards","lookup","value","getFourThreeTwo","isFour","isTwo","isThree","vals","three","two","item","push","isFlush","suit","isStraight","numberVal","sort","a","b","count","length","hm","i","countPairs","toUpperCase","Number","val1","val2","val","sorted","fullValue","getHandValue","Card","fullSuit","console","log","Deck","suits","fullSuits","values","fullValues","j","forEach","card","t","m","Math","floor","random","pop","amount","dealOne","Controls","dispatch","useDispatch","useSelector","state","gameState","holds","handleButton","e","target","newDeck","newHand","create","shuffle","deal","max","hold","className","onClick","Cards","handleClick","document","querySelectorAll","classList","contains","remove","add","cardList","map","src","alt","HoldButttons","Table","Credits","credits","Outcome","evaluate","payTable","Paytable","cols","Peeker","useEffect","betReducer","action","creditsReducer","deckReducer","Object","assign","handReducer","holdsReducer","newState","gameStateReducer","rootReducer","combineReducers","creditReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8856c353.chunk.js","sourcesContent":["export const removeCredits = (bet) => {\r\n    return {\r\n        type: 'REMOVECREDITS',\r\n        payload: bet\r\n    }\r\n}","export const saveDeck = (deck) => {\r\n    return {\r\n        type: 'SAVEDECK',\r\n        payload: deck\r\n    }\r\n}","export const saveHand = (hand) => {\r\n    return {\r\n        type: 'SAVEHAND',\r\n        payload: hand\r\n    }\r\n}","export const changeHolds = (id) => {\r\n    return {\r\n        type: 'CHANGEHOLDS',\r\n        id\r\n    }\r\n}\r\n\r\nexport const reset = () => {\r\n    return {\r\n        type: 'RESET'\r\n    }\r\n}","\r\nclass Hand {\r\n    constructor(cards = []) {\r\n        this.cards = cards;\r\n        this.sortedCards = null;\r\n        this.lookup = null;\r\n        this.value = 0;\r\n    }\r\n\r\n    evaluate() {\r\n\r\n        let outcome;\r\n\r\n        const countPairs = () => {\r\n            let count = this.cards.length;\r\n            let hm = {};\r\n            for (let i = 0; i < count; i++) {\r\n                if (this.cards[i].value in hm) {\r\n                    hm[this.cards[i].value]++;\r\n                } else {\r\n                    hm[this.cards[i].value] = 1;\r\n                }\r\n            }\r\n           this.lookup = hm;\r\n        }\r\n\r\n        const getFourThreeTwo = () => {\r\n            let isFour = false;\r\n            let isTwo = false;\r\n            let isThree = false;\r\n            let vals = [];\r\n            let three = null;\r\n            let two = null;\r\n\r\n            for (let item in this.lookup) {\r\n                if (this.lookup[item] === 4) {\r\n                    isFour = true;\r\n                    vals.push(item);\r\n\r\n                }\r\n\r\n                if (this.lookup[item] === 3) {\r\n                    isThree = true;\r\n                    vals.push(item);\r\n                    three = item\r\n                }\r\n\r\n                if (this.lookup[item] === 2)  {\r\n                    isTwo = true;\r\n                    vals.push(item);\r\n                    two = item;\r\n                }\r\n            }\r\n            return {isFour, isThree, isTwo, vals, three, two};\r\n        }\r\n\r\n        const isFlush = () => {\r\n            return this.cards[0].suit === this.cards[1].suit && this.cards[1].suit === this.cards[2].suit && this.cards[2].suit === this.cards[3].suit && this.cards[3].suit === this.cards[4].suit;\r\n        }\r\n\r\n        const getSorted = () => {\r\n            this.sortedCards = [...this.cards].sort((a, b) => {\r\n                return (a.numberVal > b.numberVal) ? 1 : -1;\r\n            });\r\n        }\r\n\r\n        const isStraight = () => {\r\n            if (this.sortedCards[0].numberVal !== 1){\r\n                return (this.sortedCards[4].numberVal - this.sortedCards[0].numberVal === 4) ? true : false;\r\n            }\r\n            return this.sortedCards[4].numberVal - this.sortedCards[1].numberVal === 3;\r\n        }\r\n\r\n        const getHandValue = () => {\r\n        // royal 900\r\n        if (isStraight() && isFlush() && this.sortedCards[0].numberVal === 1) {\r\n            this.value = 900;\r\n            return \"Royal Flush\";\r\n        }\r\n\r\n        // straight flush 800\r\n        if (isStraight() && isFlush()){\r\n            this.value = 800 + this.sortedCards[4].numberVal;\r\n            return `${this.sortedCards[4].value.toUpperCase()} High Straight Flush`;\r\n        }\r\n\r\n        // four of a kind 700\r\n        if (getFourThreeTwo()['isFour']){\r\n            this.value = 700 + Number(getFourThreeTwo()['vals'][0]);\r\n            return `Four of a Kind ${getFourThreeTwo()['vals'][0]}s`\r\n        }\r\n\r\n        // full house 600\r\n        if (getFourThreeTwo()['isThree'] && getFourThreeTwo()['isTwo']){\r\n            let val1 = getFourThreeTwo()['three'];\r\n            let val2 = getFourThreeTwo()['two'];\r\n            this.value = 600 + (Number(val1) * 2) + Number(val2);\r\n            return `${val1}s Full of ${val2}s`;\r\n        }\r\n\r\n\r\n        // flush 500\r\n        if (isFlush()) {\r\n            return `FLUSH`\r\n        }\r\n\r\n        // straight 400\r\n        let vals = getFourThreeTwo();\r\n        if (isStraight() && !vals['isFour'] && !vals['isThree'] && !vals['isTwo']) {\r\n            this.value = 400 + this.sortedCards[4].numberVal;\r\n            return `${this.sortedCards[4].value.toUpperCase()} High Straight`;\r\n        }\r\n\r\n        // trips 300\r\n        if (getFourThreeTwo()['isThree']){\r\n            let val = getFourThreeTwo()['vals'][0];\r\n            this.value = 300 + Number(val);\r\n            return `Three of a Kind ${val.toUpperCase()}s`;\r\n        }\r\n\r\n        // two pair 200\r\n        if (getFourThreeTwo()['isTwo'] && getFourThreeTwo()['vals'].length === 2) {\r\n            let sorted = getFourThreeTwo()['vals'].sort();\r\n            this.value = 200 + Number(getFourThreeTwo()['vals'][0] + getFourThreeTwo()['vals'][1]);\r\n            return `Two Pair ${sorted[1].toUpperCase()}s over ${sorted[0].toUpperCase()}s`;\r\n        }\r\n\r\n        // pair 100\r\n        if (getFourThreeTwo()['isTwo']) {\r\n            let val = getFourThreeTwo()['vals'][0];\r\n            this.value = 100 + Number(val);\r\n            return `Pair of ${val.toUpperCase()}s`;\r\n        }\r\n\r\n        // High Card 0\r\n        if (this.sortedCards[0].numberVal === 1) {\r\n            this.value = 14;\r\n            return 'High Card Ace';\r\n        }\r\n        this.value = this.sortedCards[4].numberVal;\r\n        return `High Card ${this.sortedCards[4].fullValue}`;\r\n        }\r\n\r\n        getSorted();\r\n        countPairs();\r\n        outcome = getHandValue() || \"Nothing\";\r\n        return outcome;\r\n    }\r\n\r\n    inject(hand){\r\n        this.cards = hand;\r\n    }\r\n}\r\n\r\nexport default Hand;","class Card {\r\n    constructor(id, suit, value, fullSuit, fullValue, numberVal) {\r\n        this.id = id;\r\n        this.suit = suit;\r\n        this.value = value;\r\n        this.fullSuit = fullSuit;\r\n        this.fullValue = fullValue;\r\n        this.numberVal = numberVal;\r\n    }\r\n\r\n    log() {\r\n        console.log(`id: ${this.id}${this.value}${this.suit}  == ${this.fullValue} of ${this.fullSuit}`);\r\n    }\r\n}\r\n\r\nexport default Card;","import Card from './Card';\r\n\r\nclass Deck {\r\n    constructor() {\r\n        this.cards = [];\r\n    }\r\n\r\n    create() {\r\n        const suits = ['s', 'c', 'h', 'd'];\r\n        const fullSuits = ['Spades', 'Clubs', 'Hearts', 'Diamonds'];\r\n        const values = ['a', '2', '3', '4', '5', '6', '7', '8', '9', 't', 'j', 'q', 'k'];\r\n        const fullValues = ['Ace', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine', 'Ten', 'Jack', 'Queen', 'King'];\r\n        const numberVal = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\r\n        let count = 0;\r\n\r\n        for (let i = 0; i < suits.length; i++) {\r\n            for (let j = 0; j < values.length; j++) {\r\n                this.cards.push(new Card(count++, suits[i], values[j], fullSuits[i], fullValues[j], numberVal[j]));\r\n            }\r\n        }\r\n    }\r\n\r\n    log() {\r\n        this.cards.forEach(card => {\r\n            console.log(card);\r\n        });\r\n    }\r\n\r\n    shuffle() {\r\n        let m = this.cards.length;\r\n        let t, i;\r\n        while (m) {\r\n            i = Math.floor(Math.random() * m--);\r\n            t = this.cards[m];\r\n            this.cards[m] = this.cards[i];\r\n            this.cards[i] = t;\r\n        }\r\n    }\r\n    \r\n    dealOne() {\r\n        return this.cards.pop();\r\n    }\r\n\r\n    deal(amount) {\r\n        let cards = []; \r\n        for (let i = 0; i < amount; i++) {\r\n            cards.push(this.dealOne());\r\n        }\r\n        return cards;\r\n    }\r\n}\r\n\r\nexport default Deck;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { betOne, betMax } from '../../actions/bet';\r\nimport { removeCredits } from '../../actions/credits';\r\nimport { changeGameState } from '../../actions/gameState';\r\nimport { saveDeck } from '../../actions/deck';\r\nimport { saveHand } from '../../actions/hand';\r\nimport { reset } from '../../actions/holds';\r\n\r\nimport Hand from '../Hand';\r\nimport Deck from '../Deck';\r\n\r\nimport '../../styles/Controls.scss';\r\n\r\nfunction Controls() {\r\n\r\n    const dispatch = useDispatch();\r\n    const bet = useSelector(state => state.bet);\r\n    const gameState = useSelector(state => state.gameState);\r\n    const hand = useSelector(state => state.hand);\r\n    const holds = useSelector(state => state.holds);\r\n    const deck = useSelector(state => state.deck);\r\n\r\n    const handleButton = (e) => {\r\n        if (gameState !== 'DRAW') {\r\n            switch (e.target.id){\r\n                case 'bet-one':\r\n                    dispatch(betOne());\r\n                    if (gameState !== 'DRAW') dispatch(removeCredits(1));\r\n                    dispatch(changeGameState());\r\n                    break;\r\n                case 'draw':\r\n                    switch (gameState) {\r\n                        case 'START':\r\n                            dispatch(removeCredits(bet));\r\n                            dispatch(changeGameState());\r\n                            break;\r\n                        case 'DEAL':\r\n\r\n                            let newDeck = new Deck();\r\n                            let newHand = new Hand()\r\n                            newDeck.create();\r\n                            newDeck.shuffle();\r\n                            newHand.cards = newDeck.deal(5);\r\n                            dispatch(saveDeck(newDeck));\r\n                            dispatch(saveHand(newHand));\r\n                            dispatch(reset())\r\n                            dispatch(removeCredits(bet));\r\n                            dispatch(changeGameState());\r\n                            break;\r\n                        default: \r\n                            break;\r\n                    }\r\n                    break;\r\n                case 'bet-max':\r\n                    dispatch(betMax());\r\n                    if (gameState !== 'DRAW') dispatch(removeCredits(5));\r\n                    dispatch(changeGameState());\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        } else {  // if it is draw\r\n            let newHand = [];\r\n            holds.forEach((hold, i) => {\r\n                // console.log(hand);\r\n                hold ? newHand.push(hand.cards[i]) : newHand.push(deck.dealOne());\r\n            });\r\n            dispatch(saveDeck(deck));\r\n            dispatch(saveHand(new Hand(newHand)));\r\n            dispatch(changeGameState());\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"controls\">\r\n            <div className=\"bet-one\" onClick={handleButton} id='bet-one'>bet one</div>\r\n            <div className=\"draw\" onClick={handleButton} id='draw'>{gameState}</div>\r\n            <div className=\"bet-max\" onClick={handleButton} id='bet-max'>bet max</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Controls\r\n","export const increment = () => {\r\n    return {\r\n        type: 'INCREMENT'\r\n    }\r\n}\r\n\r\nexport const decrement = () => {\r\n    return {\r\n        type: 'DECREMENT'\r\n    }\r\n}\r\n\r\nexport const betOne = () => {\r\n    return {\r\n        type: 'BETONE'\r\n    }\r\n}\r\n\r\nexport const betMax = () => {\r\n    return {\r\n        type: 'BETMAX',\r\n        max: 5\r\n    }\r\n}","export const changeGameState = () => {\r\n    return {\r\n        type: 'CHANGEGAMESTATE',\r\n    }\r\n}","import '../../styles/Cards.scss';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { changeHolds } from '../../actions/holds';\r\n\r\nfunction Cards() {\r\n\r\n    const hand = useSelector(state => state.hand);\r\n    const gameState = useSelector(state => state.gameState);\r\n\r\n    let dispatch = useDispatch();\r\n\r\n    const handleClick = (e) => {\r\n        let id = Number(e.target.id);\r\n        let holds = document.querySelectorAll('.hold-button');\r\n\r\n        if (holds[id].classList.contains('light-red')) {\r\n            holds[id].classList.remove('light-red');\r\n            holds[id].classList.add('dark-red');\r\n        } else {\r\n            holds[id].classList.remove('dark-red');\r\n            holds[id].classList.add('light-red');\r\n            dispatch(changeHolds(id));\r\n        }\r\n\r\n        dispatch(changeHolds(id));\r\n    }\r\n\r\n    let count = 0;\r\n\r\n    if (hand.cards) {\r\n        if (gameState !== 'START') {\r\n            let cardList = hand.cards.map(card => {\r\n                return <img key={card.id} id={count++} src={`/assets/cards/${card.value}${card.suit}.png`} alt={`${card.fullValue} of ${card.fullSuit}`} className=\"playing-cards\" onClick={handleClick}></img>\r\n            })\r\n            \r\n            return <div className=\"cards\">{cardList}</div>   \r\n        } else {\r\n            return (\r\n                <div className=\"cards\">\r\n                    <img className=\"playing-cards\" src=\"assets/cards/red_back.png\" alt=\"Back of Playing Card\"></img>\r\n                    <img className=\"playing-cards\" src=\"assets/cards/red_back.png\" alt=\"Back of Playing Card\"></img>\r\n                    <img className=\"playing-cards\" src=\"assets/cards/red_back.png\" alt=\"Back of Playing Card\"></img>\r\n                    <img className=\"playing-cards\" src=\"assets/cards/red_back.png\" alt=\"Back of Playing Card\"></img>\r\n                    <img className=\"playing-cards\" src=\"assets/cards/red_back.png\" alt=\"Back of Playing Card\"></img>\r\n                </div>\r\n            )\r\n        }\r\n    } else {\r\n        return <h1>Loading...</h1>\r\n    }\r\n}\r\n\r\nexport default Cards;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { changeHolds } from '../../actions/holds';\r\n\r\nimport '../../styles/HoldButtons.scss';\r\n\r\nfunction HoldButttons() {\r\n    const gameState = useSelector(state => state.gameState);\r\n    // const holds = useSelector(state => state.holds);\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n\r\n    const handleClick = (e) => {\r\n        if (gameState === 'DRAW') {\r\n            let id = Number(e.target.id);\r\n            dispatch(changeHolds(id));\r\n\r\n            if (e.target.classList.contains('light-red')) {\r\n                e.target.classList.remove('light-red');\r\n                e.target.classList.add('dark-red');\r\n                \r\n            } else {\r\n                e.target.classList.remove('dark-red');\r\n                e.target.classList.add('light-red');\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"hold-buttons\">\r\n            <div className=\"hold-button light-red\" id=\"0\" onClick={handleClick}>HOLD</div>\r\n            <div className=\"hold-button light-red\" id=\"1\" onClick={handleClick}>HOLD</div>\r\n            <div className=\"hold-button light-red\" id=\"2\" onClick={handleClick}>HOLD</div>\r\n            <div className=\"hold-button light-red\" id=\"3\" onClick={handleClick}>HOLD</div>\r\n            <div className=\"hold-button light-red\" id=\"4\" onClick={handleClick}>HOLD</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HoldButttons\r\n","import React from 'react';\r\n\r\nimport Controls from './Controls';\r\nimport Cards from './Cards';\r\nimport HoldButtons from './HoldButtons';\r\n\r\nimport '../../styles/Table.scss'\r\n\r\nfunction Table() {\r\n\r\n    return (\r\n        <div className=\"table\">\r\n            <Cards />\r\n            <HoldButtons /> \r\n            <Controls />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { increment, decrement } from '../../actions/bet';\r\n\r\nimport '../../styles/Credits.scss';\r\n\r\nfunction Credits() {\r\n\r\n    const credits = useSelector(state => state.credits); \r\n    const bet = useSelector(state => state.bet);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = (e) => {\r\n        switch (e.target.id) {\r\n            case 'minus':\r\n                if (bet !== 1){\r\n                    dispatch(decrement());\r\n                }\r\n                break;\r\n            case 'plus':\r\n                if (bet !== 5) {\r\n                    dispatch(increment());\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"credits\">\r\n            <div className=\"credits-wrapper\">\r\n                <div className=\"credits-label\">CREDITS:</div>\r\n                <div className=\"display-credits\">{credits}</div>\r\n            </div>\r\n            <div className=\"current-bet\">Current Bet</div>\r\n            <div className=\"credit-controls\">\r\n                <div className=\"minus\" id=\"minus\" onClick={handleClick}>-</div>\r\n                <div className=\"bet-amount\">{bet}</div>\r\n                <div className=\"plus\" id=\"plus\" onClick={handleClick}>+</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Credits\r\n","import React from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport '../styles/Outcome.scss';\r\n\r\nfunction Outcome() {\r\n\r\n    const hand = useSelector(state => state.hand);\r\n    const gameState = useSelector(state => state.gameState);\r\n\r\n    if (gameState !== 'START') {\r\n        return (\r\n            <div className=\"outcome\">\r\n                { (hand.length !== 0) ? hand.evaluate() : <h1>LOADING...</h1> }\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <>\r\n            <div className=\"outcome\">PLACE YOUR BET<br />AND PRESS START</div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Outcome\r\n","const payTable = [\r\n    [\"Credits\", \"Royal Flush\", \"Straight Flush\", \"Four of a Kind\", \"Full House\",\r\n      \"Flush\", \"Straight\", \"Three of a Kind\", \"Two Pair\", \"Jacks or Better\"],\r\n    [1, 250, 50, 25, 9, 6, 4, 3, 2, 1],\r\n    [2, 500, 100, 50, 18, 12, 8, 6, 4, 2],\r\n    [3, 750, 150, 75, 27, 18, 12, 9, 6, 3],\r\n    [4, 1000, 200, 100, 36, 24, 16, 12, 8, 4],\r\n    [5, 4000, 250, 125, 45, 30, 20, 15, 10, 5]\r\n  ];\r\n\r\n  export default payTable;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport payTable from './pay';\r\n\r\nimport '../styles/Paytable.scss';\r\n\r\nfunction Paytable() {\r\n\r\n    const bet = useSelector(state => state.bet);\r\n\r\n    return (\r\n        <div className=\"pay\">\r\n        <h3 className=\"paytable\">Pay Table</h3>\r\n        <table>\r\n            <thead>\r\n                <tr className=\"head\">\r\n                    {payTable.map((cols, i) => (\r\n                        <th key={i} className= {(i === bet ? \"active\" : \"col\")}>{cols[0]}</th>\r\n                    ))}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    {payTable.map((cols, i) => (\r\n                        <th key={i} className={(i === bet ? \"active\" : \"col\")}>{cols[1]}</th>\r\n                    ))}\r\n                </tr>\r\n                <tr>\r\n                    {payTable.map((cols, i) => (\r\n                        <th key={i} className={(i === bet ? \"active\" : \"col\")}>{cols[2]}</th>\r\n                    ))}\r\n                </tr>\r\n                <tr>\r\n                    {payTable.map((cols, i) => (\r\n                        <th key={i} className={(i === bet ? \"active\" : \"col\")}>{cols[3]}</th>\r\n                    ))}\r\n                </tr>\r\n                <tr>\r\n                    {payTable.map((cols, i) => (\r\n                        <th key={i} className={(i === bet ? \"active\" : \"col\")}>{cols[4]}</th>\r\n                    ))}\r\n                </tr>\r\n                <tr>\r\n                    {payTable.map((cols, i) => (\r\n                        <th key={i} className={(i === bet ? \"active\" : \"col\")}>{cols[5]}</th>\r\n                    ))}\r\n                </tr>\r\n                <tr>\r\n                    {payTable.map((cols, i) => (\r\n                        <th key={i} className={(i === bet ? \"active\" : \"col\")}>{cols[6]}</th>\r\n                    ))}\r\n                </tr>\r\n                <tr>\r\n                    {payTable.map((cols, i) => (\r\n                        <th key={i} className={(i === bet ? \"active\" : \"col\")}>{cols[7]}</th>\r\n                    ))}\r\n                </tr>\r\n                <tr>\r\n                    {payTable.map((cols, i) => (\r\n                        <th key={i} className={(i === bet ? \"active\" : \"col\")}>{cols[8]}</th>\r\n                    ))}\r\n                </tr>\r\n                <tr>\r\n                    {payTable.map((cols, i) => (\r\n                        <th key={i} className={(i === bet ? \"active\" : \"col\")}>{cols[9]}</th>\r\n                    ))}\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paytable\r\n","\r\nimport { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport Table from './Table'\r\nimport Credits from './Credits';\r\nimport Deck from './Deck';\r\nimport Card from './Card';\r\nimport Hand from './Hand';\r\nimport Outcome from './Outcome';\r\nimport Paytable from './Paytable';\r\nimport Odds from './Odds';\r\n\r\nimport { saveDeck } from '../actions/deck';\r\nimport { saveHand } from '../actions/hand';\r\n\r\nimport '../styles/Peeker.scss';\r\n\r\nfunction Peeker() {\r\n\r\n    const dispatch = useDispatch();\r\n    let toInject = false;\r\n    let odds = false;\r\n    // let hint = false; \r\n\r\n    const injectHand = () => {\r\n        let hand = [];\r\n        hand.push(new Card(3, 'd', 't', 'Diamonds', 'Ten', 10));\r\n        hand.push(new Card(4, 'h', '6', 'Hearts', 'Six', 6));\r\n        hand.push(new Card(1, 's', 't', 'Spades', 'Ten', 10));\r\n        hand.push(new Card(2, 'h', '5', 'Hearts', 'Five', 5));\r\n        hand.push(new Card(5, 's', '3', 'Spades', 'Three', 3));\r\n        let newHand = new Hand(hand);\r\n        newHand.inject(hand);\r\n        return newHand;\r\n    }\r\n\r\n    useEffect(() => {\r\n        let deck = new Deck();\r\n        let hand = new Hand()\r\n        deck.create();\r\n        deck.shuffle();\r\n        toInject ? hand = injectHand() : hand.cards = deck.deal(5);\r\n        dispatch(saveDeck(deck));\r\n        dispatch(saveHand(hand));\r\n    },[dispatch, toInject]);\r\n\r\n    return (\r\n    <div className=\"wrapper\">\r\n        { odds ? <Odds /> : <div className=\"odds\"></div> }\r\n        <Table />\r\n        <Paytable />\r\n        <Credits />\r\n        <Outcome />\r\n        <div className=\"hints\"></div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Peeker;","const betReducer = (state = 1, action) => {\r\n    switch (action.type) {\r\n        case 'INCREMENT':\r\n            return state + 1; \r\n        case 'DECREMENT':\r\n            return state - 1;\r\n        case 'BETONE':\r\n            return state = 1;\r\n        case 'BETMAX':\r\n            return state = action.max;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default betReducer;","const creditsReducer = (state = 100, action) => {\r\n    switch (action.type){\r\n        case \"ADDCREDITS\": \r\n            return state + action.payload;\r\n        case \"REMOVECREDITS\":\r\n            return state - action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default creditsReducer;","const deckReducer = (state = [], action) => {\r\n    switch (action.type){\r\n        case \"SAVEDECK\": \r\n            return state = Object.assign(action.payload);\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default deckReducer;","const handReducer = (state = [], action) => {\r\n    switch (action.type){\r\n        case \"SAVEHAND\": \r\n            return state = Object.assign(action.payload);\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default handReducer;","const holdsReducer = (state = [false, false, false, false, false], action) => {\r\n    switch (action.type){\r\n        case \"CHANGEHOLDS\": \r\n            let newState = Object.assign(state)\r\n            newState[action.id] = !state[action.id];\r\n            return state = Object.assign(newState);\r\n        case \"RESET\":\r\n            const holds = document.querySelectorAll('.hold-button');\r\n            for (let hold of holds) {\r\n                hold.classList.add('light-red');\r\n                hold.classList.remove('dark-red');\r\n            }\r\n            return state = [false, false, false, false, false];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default holdsReducer;","const gameStateReducer = (state = 'START', action) => {\r\n    switch (action.type){\r\n        case \"CHANGEGAMESTATE\": \r\n            switch (state) {\r\n                case 'START':\r\n                    return state = 'DRAW';\r\n                case 'DRAW':\r\n                    return state = 'DEAL'\r\n                case 'DEAL':\r\n                    return state = 'DRAW'\r\n                default:\r\n                    break;\r\n            }\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default gameStateReducer;","import betReducer from './betReducer';\r\nimport creditReducer from './creditsReducer'\r\nimport deckReducer from './deckReducer'\r\nimport handReducer from './handReducer'\r\nimport holdsReducer from './holdsReducer'\r\nimport gameStateReducer from './gameStateReducer'\r\n\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n    bet: betReducer,\r\n    credits: creditReducer,\r\n    deck: deckReducer,\r\n    hand: handReducer,\r\n    gameState: gameStateReducer,\r\n    holds: holdsReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport Peeker from './Components/Peeker';\r\nimport rootReducer from './reducers';\r\nimport './index.scss';\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Peeker />\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}